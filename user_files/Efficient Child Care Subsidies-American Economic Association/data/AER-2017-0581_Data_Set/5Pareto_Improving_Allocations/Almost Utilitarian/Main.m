%% Pareto Improving Allocations
% rho=0.99 specification (8) in Table B4

clc
clear all

% Actual utility under US tax and benefit system   
load ('..\..\3Calibration_M\01ActualUSBaseline.mat') 
Au1=u;

global w z pz Nz N p theta gamma G n Au1 rho

w=0.51;                                                     % Cost of formal child care based on 2010 average child care cost
z=0.1*[2.40 3.75 4.08 4.32 4.54 4.72 4.85 4.97 5.08 5.19 5.29 5.43 5.54 5.63 5.76 5.88 6 6.13 6.23 6.36 6.5 6.66 6.8 7.02 7.21 7.34 7.52 7.71 8.01 8.33 8.69 9 9.37 9.61 10 10.31 10.83 11.53 12.01 12.5 13.46 14 14.57 15.71 16.82 18.51 20 22.36 25.64 32.21];
                                                            % Market productivity type (normalised by dividing by 10)
Nz=50;
N=51;

rho=0.99;                                                    % CES parameter

%% e=24 ; gamma=1 ; w=0.51                                    
n=24;                                                       % Normalisation
gamma=1;                                                    % Effort felicity parameter
G=(3896)/(10*50*n);                                         % Government generosity when w=0.51
theta=1.27;                                                 % Effort cost type types
                                                        
%% Empirical distributions
pz=0.02*ones(Nz,1);                                         % Distribution of z based on 2010 March CPS z distribution
p=0.11;                                                     % Probability of being unlucky

%% Optimisation

options=optimset('LargeScale','on','MaxFunEvals',10000000,'Display','Iter','MaxIter',1000000,'TolCon',1e-6,'TolX',1e-6);

% Initial values
init=0.5*ones(N,3);
% lb=1e-5*ones(N,3);
ub=100*ones(N,3);
for i=1:N
    ub(i,2)=1;
end

% e=24 ; gamma=1 ; w=0.51 ; Tol=1e-6; rho=0.99; DIC & LUIC
init=[0.279823854479909 0.647610385409226 2.08872860390065e-09;0.280986625774276 0.645292788273814 0.000399925989856265;0.283395415187222 0.642887314245205 0.00149295467713763;0.286495571146131 0.641576548000319 0.0021635467037733;0.290143458529489 0.63988150220663 0.00301373949714052;0.294298941821299 0.637539644041506 0.00421768782276977;0.298897752378252 0.634416255511907 0.0058395140762437;0.303916840153842 0.63105300135652 0.00760958380288876;0.30907727956857 0.625417035517419 0.0105546831633068;0.314349879395534 0.615485826916086 0.0157776184801356;0.319501108961349 0.584868149934823 0.0318886691853907;0.324221982583866 0.505862507880135 0.0739368461423059;0.331431143597803 0.135727559502496 0.278879731305299;0.349506403870905 0.0691351983036158 0.331499596962323;0.365820450759503 0.0391895009760121 0.36154929684152;0.387241015100419 0.0245132514176435 0.388549068867794;0.408019796962883 0.0184507366881321 0.409505132751278;0.428778193131661 0.0153718761308983 0.428485205989962;0.452069180756547 0.0126730463467032 0.449729776887849;0.470744996300305 0.0114133636232381 0.46487008402287;0.494263738857894 0.0099594930040858 0.485355157777684;0.519727245698487 0.00885241982676164 0.507783507736781;0.548760576599778 0.00769052919524307 0.534233833788591;0.573811343584454 0.00708019587605802 0.555998039699037;0.614361744024228 0.00618228819286018 0.595241830858716;0.651732171163274 0.00552092887769931 0.630562425810446;0.677119261972479 0.00523084881372825 0.652341467275146;0.711000172639289 0.00477641963650135 0.683777861976883;0.744020656712022 0.00447386876530848 0.714716814507894;0.797887403750937 0.003997289081818 0.769855835366423;0.856705603915517 0.00357054134050606 0.83108226151998;0.928650192639079 0.00320831515265037 0.907180021973354;0.987703412975107 0.00293264884090305 0.968820155359135;1.06831365882448 0.00266107200965659 1.0547579461193;1.10936532232883 0.00254347653452779 1.0968498992867;1.19250096902731 0.00233567388898034 1.18703656061949;1.23699376162343 0.0022235750224775 1.23464206434213;1.30924385483383 0.00206902729502898 1.31725970715632;1.45845294708639 0.00182011585477598 1.49505351334742;1.56344509791145 0.0016941630080245 1.61763998497427;1.60248712723517 0.00163288811588572 1.66385365710279;1.93485647488316 0.00136712089327111 2.07217698825169;2.08931007764712 0.00127681016162281 2.24917576484124;2.15118475302081 0.00123328402415024 2.32114380928335;2.50229608070626 0.00108362333277047 2.75368834073815;2.77352339387744 0.000996929044653876 3.08626146231101;3.43276749864598 0.000841417711187494 3.90546477691307;3.93901610649985 0.000759103884420766 4.5148388218479;4.93106231252589 0.000650369127667886 5.74127332242242;6.49416028440023 0.000537424608001626 7.6829360437868;10.8447904964666 0.000385553408791895 13.1746610354744];

x=fmincon(@(x) V(x),init,[],[],[],[],[],ub,@(x) mycon(x),options);

beep

%% Expost check of LDIC binding and UIC satisfied
% LDIC
for r=1:N-1
    K(r)=((x(r,1)-(1/theta)*((((x(r,3)/z(r))+x(r,2))^(1+gamma))/(1+gamma))))-((x(r+1,1)-(1/theta)*((((x(r+1,3)/z(r))+x(r+1,2))^(1+gamma))/(1+gamma))));
end 
nobind1=sum(K<-0.01)
nobind2=sum(K>0.01)
% UIC
for r=2:N-1
    for s=1:N-2
        if r+s<N+1 & x(r+s,1)-(1/theta)*((((x(r+s,3)/z(r-1))+x(r+s,2))^(1+gamma))/(1+gamma))>0
            D(N*r-2*N+s)=((x(r+s,1)-(1/theta)*((((x(r+s,3)/z(r-1))+x(r+s,2))^(1+gamma))/(1+gamma))))-((x(r,1)-(1/theta)*((((x(r,3)/z(r-1))+x(r,2))^(1+gamma))/(1+gamma))));
        else
            D(N*r-2*N+s)=0;
        end
    end  
end
bind=sum(D>0.01)

%% Optimal Allocations

wage=10*[0 z];
earnings=10*n*50*x(:,3)/1000;
consumption=10*n*50*x(:,1)/1000;
care=x(:,2);
formal=10*n*50*w*(1-x(:,2))/1000;

wedge(1)=1-(1/w)*((1/theta)*((x(1,2))^gamma));
for r=2:N
    if x(r,3)>0.08
        wedge(r)=1-(1/z(r-1))*((1/theta)*(((x(r,3)/z(r-1))+x(r,2))^gamma));
    else 
        wedge(r)=1-(1/w)*((1/theta)*((x(r,2))^gamma));
    end
end   
      
for r=1:N
    if care(r,1)<0.99 & x(r,3)>0.08
        subsidy(r)=min(1,max(0,(1-((1/w)*((1/theta)*((x(r,3)/z(50))+x(r,2))^gamma)))));
    else 
        subsidy(r)=0;
    end
end

for r=1:1
    u(r)=x(r,1)-(1/theta)*(((x(r,2))^(1+gamma))/(1+gamma));
end
for r=2:N
    u(r)=x(r,1)-(1/theta)*((((x(r,3)/z(r-1))+x(r,2))^(1+gamma))/(1+gamma));
end

u=u*(10*n*50)/1000;

x
init0=mat2str(x)
earnings0=mat2str(earnings)
care0=mat2str(care)
consumption0=mat2str(consumption)
subsidy0=mat2str(subsidy)
u0=mat2str(u)

nowork=x(:,3)<0.08;                                                        % No. of unemployed
firstwork=sum(nowork)+1;                                                   % Index of first employed z 
earn=earnings(firstwork:N);
sub=subsidy(firstwork:N);
earn0=mat2str(earn)
sub0=mat2str(sub)
                                   
save ParetoRho99.mat

beep

